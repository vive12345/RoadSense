/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.automotive.CANTraceSimulation'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
// this was just to test the gps data is parsed from txt and converted to the list of not. 
// // we can comment this for main submission
// task runGPSTest(type: JavaExec, dependsOn: 'testClasses') {
//     description = 'Run GPS parser test'
//     group = 'application'
//     mainClass = 'org.automotive.GPSParserTest'
//     classpath = sourceSets.test.runtimeClasspath
//     args = ["<your_absolute_path>/app/src/main/resources/GPStrace.txt"]
// }
task runReceiver(type: JavaExec) {
    description = 'Run the Receiver application'
    group = 'application'
    mainClass = 'org.automotive.Receiver'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in  
}
// Run the Enhanced Receiver with segment detection
task runEnhancedReceiver(type: JavaExec) {
    description = 'Run the Enhanced Receiver application with segment detection'
    group = 'application'
    mainClass = 'org.automotive.ReceiverEnhanced'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in  
}
// Run the Receiver with HMI GUI interface
task runReceiverHMI(type: JavaExec) {
    description = 'Run the Receiver application with ADAS HMI interface'
    group = 'application'
    mainClass = 'org.automotive.ReceiverWithHMI'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}